// <auto-generated />
using System;
using DALProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Task4WebApp.Migrations
{
    [DbContext(typeof(MainDBContext))]
    [Migration("20180716150104_AddAttributesToPilotStewardess")]
    partial class AddAttributesToPilotStewardess
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DALProject.Models.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PilotId");

                    b.HasKey("Id");

                    b.ToTable("Crew");

                    b.HasData(
                        new { Id = 1, PilotId = 1 },
                        new { Id = 2, PilotId = 2 },
                        new { Id = 3, PilotId = 3 }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrewItemId");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<int>("FlightId");

                    b.Property<int>("PlaneItemId");

                    b.HasKey("Id");

                    b.HasIndex("CrewItemId");

                    b.HasIndex("FlightId");

                    b.HasIndex("PlaneItemId");

                    b.ToTable("Departures");

                    b.HasData(
                        new { Id = 1, CrewItemId = 1, DepartureDate = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), FlightId = 2, PlaneItemId = 3 },
                        new { Id = 2, CrewItemId = 3, DepartureDate = new DateTime(2018, 2, 13, 11, 30, 0, 0, DateTimeKind.Unspecified), FlightId = 3, PlaneItemId = 2 },
                        new { Id = 3, CrewItemId = 2, DepartureDate = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), FlightId = 5, PlaneItemId = 1 }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("DeparturePoint")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new { Id = 1, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "Rome", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" },
                        new { Id = 2, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "NY", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" },
                        new { Id = 3, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "Ottawa", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" },
                        new { Id = 4, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "Rome", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" },
                        new { Id = 5, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "NY", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" },
                        new { Id = 6, ArrivalTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), DeparturePoint = "Ottawa", DepartureTime = new DateTime(2018, 1, 11, 15, 45, 0, 0, DateTimeKind.Unspecified), Destination = "Paris" }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("TimeTicks");

                    b.HasKey("Id");

                    b.ToTable("Pilots");

                    b.HasData(
                        new { Id = 1, BirthDate = new DateTime(1978, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Adam", Surname = "Benn", TimeTicks = 4298400000000000L },
                        new { Id = 2, BirthDate = new DateTime(1964, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Max", Surname = "Payne", TimeTicks = 9881568000000000L },
                        new { Id = 3, BirthDate = new DateTime(1974, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Francis", Surname = "Castle", TimeTicks = 8271072000000000L }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<long>("TimeTicks");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Plane");

                    b.HasData(
                        new { Id = 1, Name = "Boeing 787", ReleaseDate = new DateTime(2010, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), TimeTicks = 3786912000000000L, TypeId = 1 },
                        new { Id = 2, Name = "Boeing 737", ReleaseDate = new DateTime(2013, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TimeTicks = 4102272000000000L, TypeId = 2 },
                        new { Id = 3, Name = "Boeing 777", ReleaseDate = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), TimeTicks = 5049216000000000L, TypeId = 3 }
                    );
                });

            modelBuilder.Entity("DALProject.Models.PlaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirLift");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Seats");

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");

                    b.HasData(
                        new { Id = 1, AirLift = 58100, Model = "Boeing 737-200", Seats = 130 },
                        new { Id = 2, AirLift = 244900, Model = "Boeing 787 Dreamliner", Seats = 250 },
                        new { Id = 3, AirLift = 351800, Model = "Boeing 777-300", Seats = 550 }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Stewardess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("CrewId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");

                    b.HasData(
                        new { Id = 1, BirthDate = new DateTime(2001, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 1, Name = "Eve", Surname = "Fairy" },
                        new { Id = 2, BirthDate = new DateTime(1999, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 1, Name = "Samantha", Surname = "Simson" },
                        new { Id = 3, BirthDate = new DateTime(1998, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 2, Name = "Gabrial", Surname = "Fate" },
                        new { Id = 4, BirthDate = new DateTime(1993, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 3, Name = "Hannah", Surname = "Screw" },
                        new { Id = 5, BirthDate = new DateTime(1996, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 2, Name = "Jennah", Surname = "Johns" },
                        new { Id = 6, BirthDate = new DateTime(1992, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), CrewId = 3, Name = "Ivory", Surname = "Rocket" }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightId");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new { Id = 1, FlightId = 1, Price = 25.0 },
                        new { Id = 2, FlightId = 1, Price = 35.0 },
                        new { Id = 3, FlightId = 1, Price = 45.0 },
                        new { Id = 4, FlightId = 2, Price = 25.0 },
                        new { Id = 5, FlightId = 2, Price = 35.0 },
                        new { Id = 6, FlightId = 2, Price = 45.0 },
                        new { Id = 7, FlightId = 3, Price = 25.0 },
                        new { Id = 8, FlightId = 3, Price = 35.0 },
                        new { Id = 9, FlightId = 3, Price = 45.0 },
                        new { Id = 10, FlightId = 4, Price = 25.0 },
                        new { Id = 11, FlightId = 4, Price = 35.0 },
                        new { Id = 12, FlightId = 4, Price = 45.0 },
                        new { Id = 13, FlightId = 5, Price = 25.0 },
                        new { Id = 15, FlightId = 5, Price = 35.0 },
                        new { Id = 16, FlightId = 5, Price = 45.0 },
                        new { Id = 17, FlightId = 6, Price = 25.0 },
                        new { Id = 18, FlightId = 6, Price = 35.0 },
                        new { Id = 19, FlightId = 6, Price = 45.0 }
                    );
                });

            modelBuilder.Entity("DALProject.Models.Departure", b =>
                {
                    b.HasOne("DALProject.Models.Crew", "CrewItem")
                        .WithMany()
                        .HasForeignKey("CrewItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DALProject.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DALProject.Models.Plane", "PlaneItem")
                        .WithMany()
                        .HasForeignKey("PlaneItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DALProject.Models.Plane", b =>
                {
                    b.HasOne("DALProject.Models.PlaneType", "TypeOfPlane")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DALProject.Models.Stewardess", b =>
                {
                    b.HasOne("DALProject.Models.Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DALProject.Models.Ticket", b =>
                {
                    b.HasOne("DALProject.Models.Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
